[tox]
minversion = 4.0
envlist = py311, lint-incr
isolated_build = true

[testenv]
# The colons in the substitutions below let us re-use the `install_command` in
# places where `tox` doesn't automatically fill in those values.
install_command = pip install -c{toxinidir}/constraints.txt -U {opts:} {packages:}
setenv =
  VIRTUAL_ENV={envdir}
  LANGUAGE=en_US
  LC_ALL=en_US.utf-8
  ARGS="-V"
deps =
    -r{toxinidir}/requirements.txt
    -r{toxinidir}/requirements-dev.txt
    -r{toxinidir}/template_implementations/physics/hamiltonian_simulation/requirements-dev.txt
commands =
  stestr --test-path template_implementations/physics/hamiltonian_simulation/test run {posargs}

[testenv:lint]
basepython = python3
# `pylint` will examine the source code, not the version that would otherwise be
# installed in `site-packages`, so we use an editable install to make sure the
# compiled modules are built into a valid place for it to find them.
package = editable
commands =
  black --check {posargs} template_implementations templates tools
  pylint -rn template_implementations templates tools
  python {toxinidir}/tools/verify_headers.py template_implementations templates tools


[testenv:black]
skip_install = true
deps =
    -r requirements-dev.txt
commands = black {posargs} template_implementations templates tools

[testenv:coverage]
basepython = python3
setenv =
  {[testenv]setenv}
  PYTHON=coverage3 run --source qiskit
commands =
  stestr run {posargs}
  coverage3 combine
  coverage3 report